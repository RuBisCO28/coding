# 各桁の値が１以上９以下の数値のみである整数とみなせるような，長さNの文字列Sが与えられます
# この文字列の中で，文字と文字の間のうちのいくつかの場所に「＋」を入れることができます
# １つも入れなくてもかまいませんが，「+」が連続してはいけません
# このようにしてできるすべての文字列を数値とみなして，総和を計算するO(2N)のアルゴリズムを設計してください
# 出典:AtCoderBeginnerContest045Cたくさんの数式

# N-1 箇所の隙間に「+」を入れるかどうかをすべて試す
# 4C4 + 4C3 + ... 4C1 + 4C0= 2^4
# 1+4+6+4+1=16
# 計算量は O(N2^N)

if __name__ == "__main__":
  n = 3
  s = "123"
  ans = 0
  for i in range(2 ** (n-1)):
    f = s[0]
    for j in range(n-1):
      # iの２進数表記において、j桁目が1かどうか判定
      # 1であれば+を挿入
      # 桁数は右からなのは注意
      if (i >> j) & 1:
        print(i,j,f)
        f += '+'
      f += s[j+1]
    print(i,f)
    ans += sum(map(int, f.split('+')))
  print(ans)
